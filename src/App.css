/* --------------------------------------------------------
   App.css : styles applicatifs pour cartes & menus
   -------------------------------------------------------- */

/* Container principal */
.app {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 1rem;
  box-sizing: border-box;
}

/* Intro / écran de démarrage éventuel */
.intro {
  max-width: 600px;
  margin: 0 auto 2rem;
  padding: 16px;
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  color: #333;
}
.intro h2, .intro h3 {
  color: #213547;
}

/* Mode toggle boutons */
.mode-toggle {
  display: flex;
  justify-content: center;
  gap: 12px;
  margin-bottom: 1rem;
}
.mode-toggle button {
  /* style hérités de index.css */
}
.mode-toggle .active {
  background-color: #646cff;
  color: #fff;
}

/* Controls (menus déroulants) */
.controls {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-bottom: 1rem;
}
.theme-selector {
  display: flex;
  align-items: center;
  gap: 4px;
}

/* Indicateur couleur à côté du select thème */
#themeColorIndicator {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 1px solid #999;
  border-radius: 3px;
  background-color: transparent;
  vertical-align: middle;
  transition: background-color 0.25s, border-color 0.25s;
}

/* Card container et animations */
.card-container {
  perspective: 1000px;
  margin: 0 auto;
  max-width: 600px;
}
.card {
  width: 100%;
  position: relative;
  transform-style: preserve-3d;
  margin-bottom: 32px;
  cursor: pointer;
  transition: box-shadow .3s;
}
.card:hover {
  box-shadow: 0 8px 16px rgba(0,0,0,0.15);
}
.card.flipped {
  animation: flipBounce .6s forwards;
}
@keyframes flipBounce {
  0%   { transform: rotateY(0deg); }
  60%  { transform: rotateY(200deg); }
  100% { transform: rotateY(180deg); }
}

/* Faces de la carte */
.card-face {
  position: absolute;
  width: 100%;
  backface-visibility: hidden;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  overflow: hidden;
  background: #fff;
}
.card-front, .card-back {
  min-height: 200px;
}
.card-back {
  transform: rotateY(180deg);
}

/* En-tête de carte (header) */
.card-header {
  padding: 16px 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  text-align: center;
}
.badge {
  margin-left: 12px;
  background: rgba(0,0,0,0.2);
  color: #fff;
  border-radius: 12px;
  padding: 2px 8px;
  font-size: .75rem;
}

/* Corps de carte */
.card-body {
  padding: 24px;
  color: #333;
  text-align: justify;
  line-height: 1.6;
}
.card-body p, .card-body ul {
  margin: 0 0 12px;
}
.card-body ul {
  padding-left: 20px;
}

/* Verso : groupes de solution */
.solution-group {
  margin-bottom: 12px;
  opacity: 0;
}
.solution-group.visible {
  opacity: 1;
  transition: opacity .4s ease;
}
.card-footer {
  padding: 12px 16px;
  font-size: .85rem;
  color: #666;
  border-top: 1px solid #eee;
  text-align: right;
  opacity: 0;
}
.card-footer.visible {
  opacity: 1;
  transition: opacity .4s ease;
  transition-delay: 1s;
}

/* --------------------------------------------------------
   Styles des en-têtes de carte selon thème
   Utilise les variables CSS définies dans index.css
   -------------------------------------------------------- */
.card-header.preparation {
  background: var(--color-preparation);
  color: #fff;
}
/* Si nuance darker existe, on peut faire un gradient :
.card-header.preparation {
  background: linear-gradient(
    to right,
    var(--color-preparation),
    var(--color-preparation-dark)
  );
  color: #fff;
}
*/

.card-header.semis {
  background: var(--color-semis);
  color: #333;
}

.card-header.fongicide {
  background: var(--color-fongicide);
  color: #fff;
}

.card-header.herbicide {
  background: var(--color-herbicide);
  color: #fff;
}

.card-header.insecticide {
  background: var(--color-insecticide);
  color: #333;
}

.card-header.engrais {
  background: var(--color-engrais);
  color: #333;
}

.card-header.recolte {
  background: var(--color-recolte);
  color: #fff;
}

/* --------------------------------------------------------
   (Optionnel) Styles pour select de fiches par thème :
   Vous pouvez, en React, ajouter une classe dynamique
   <select className={`fiche-select ${theme}`}>...
   et définir ici :
.fiche-select.preparation {
  border-color: var(--color-preparation);
  background-color: #E07A5F22;
}
.fiche-select.semis {
  border-color: var(--color-semis);
  background-color: #F2CC8F22;
}
... etc.
   -------------------------------------------------------- */

/* Autres styles spécifiques de votre App peuvent suivre */
